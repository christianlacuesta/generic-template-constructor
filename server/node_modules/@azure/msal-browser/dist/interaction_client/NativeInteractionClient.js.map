{"version":3,"file":"NativeInteractionClient.js","sources":["../../src/interaction_client/NativeInteractionClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthenticationResult, Logger, ICrypto, PromptValue, AuthToken, Constants, AccountEntity, AuthorityType, ScopeSet, TimeUtils, AuthenticationScheme, UrlString, OIDC_DEFAULT_SCOPES, PopTokenGenerator, SignedHttpRequestParameters, IPerformanceClient, PerformanceEvents } from \"@azure/msal-common\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { NativeExtensionMethod, ApiId, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { NativeExtensionRequestBody, NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest\";\nimport { NativeResponse } from \"../broker/nativeBroker/NativeResponse\";\nimport { NativeAuthError } from \"../error/NativeAuthError\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\n\nexport class NativeInteractionClient extends BaseInteractionClient {\n    protected apiId: ApiId;\n    protected accountId: string;\n    protected nativeMessageHandler: NativeMessageHandler;\n\n    constructor(config: BrowserConfiguration, browserStorage: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, apiId: ApiId, performanceClient: IPerformanceClient, provider: NativeMessageHandler, accountId: string, correlationId?: string) {\n        super(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\n        this.apiId = apiId;\n        this.accountId = accountId;\n        this.nativeMessageHandler = provider;\n    }\n\n    /**\n     * Acquire token from native platform via browser extension\n     * @param request\n     */\n    async acquireToken(request: PopupRequest|SilentRequest|SsoSilentRequest): Promise<AuthenticationResult> {\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\n\n        // start the perf measurement\n        const nativeATMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\n        const nativeRequest = await this.initializeNativeRequest(request);\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest\n        };\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response: object = await this.nativeMessageHandler.sendMessage(messageBody);\n        const validatedResponse: NativeResponse = this.validateNativeResponse(response);\n\n        return this.handleNativeResponse(validatedResponse, nativeRequest, reqTimestamp)\n            .then((result: AuthenticationResult) => {\n                nativeATMeasurement.endMeasurement({\n                    success: true,\n                    isNativeBroker: true\n                });\n                return result;\n            })\n            .catch((error) => {\n                nativeATMeasurement.endMeasurement({\n                    success: false,\n                    isNativeBroker: true\n                });\n                throw error;\n            });\n    }\n\n    /**\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\n     * @param request\n     */\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        this.logger.trace(\"NativeInteractionClient - acquireTokenRedirect called.\");\n        const nativeRequest = await this.initializeNativeRequest(request);\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest\n        };\n\n        try {\n            const response: object = await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n        } catch (e) {\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\n            if (e instanceof NativeAuthError && e.isFatal()) {\n                throw e;\n            }\n        }\n        this.browserStorage.setTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, JSON.stringify(nativeRequest), true);\n\n        const navigationOptions: NavigationOptions = {\n            apiId: ApiId.acquireTokenRedirect,\n            timeout: this.config.system.redirectNavigationTimeout,\n            noHistory: false\n        };\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl ? window.location.href : this.getRedirectUri(request.redirectUri);\n        await this.navigationClient.navigateExternal(redirectUri, navigationOptions); // Need to treat this as external to ensure handleRedirectPromise is run again\n    }\n\n    /**\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\n     */\n    async handleRedirectPromise(): Promise<AuthenticationResult | null> {\n        this.logger.trace(\"NativeInteractionClient - handleRedirectPromise called.\");\n        if (!this.browserStorage.isInteractionInProgress(true)) {\n            this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\n            return null;\n        }\n\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\n        if (!cachedRequest) {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\");\n            return null;\n        }\n\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: cachedRequest\n        };\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n\n        try {\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise sending message to native broker.\");\n            const response: object = await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n            const result = this.handleNativeResponse(response as NativeResponse, cachedRequest, reqTimestamp);\n            this.browserStorage.setInteractionInProgress(false);\n            return result;\n        } catch (e) {\n            this.browserStorage.setInteractionInProgress(false);\n            throw e;\n        }\n    }\n\n    /**\n     * Logout from native platform via browser extension\n     * @param request\n     */\n    logout(): Promise<void> {\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\n        return Promise.reject(\"Logout not implemented yet\");\n    }\n\n    /**\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\n     * @param response\n     * @param request\n     * @param reqTimestamp\n     */\n    protected async handleNativeResponse(response: NativeResponse, request: NativeTokenRequest, reqTimestamp: number): Promise<AuthenticationResult> {\n        this.logger.trace(\"NativeInteractionClient - handleNativeResponse called.\");\n\n        if (response.account.id !== request.accountId) {\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\n            throw NativeAuthError.createUserSwitchError();\n        }\n\n        // create an idToken object (not entity)\n        const idTokenObj = new AuthToken(response.id_token || Constants.EMPTY_STRING, this.browserCrypto);\n\n        // Get the preferred_cache domain for the given authority\n        const authority = await this.getDiscoveredAuthority(request.authority);\n        const authorityPreferredCache = authority.getPreferredCache();\n\n        // Save account in browser storage\n        const homeAccountIdentifier = AccountEntity.generateHomeAccountId(response.client_info || Constants.EMPTY_STRING, AuthorityType.Default, this.logger, this.browserCrypto, idTokenObj);\n        const accountEntity = AccountEntity.createAccount(response.client_info, homeAccountIdentifier, idTokenObj, undefined, undefined, undefined, undefined, authorityPreferredCache, response.account.id);\n        this.browserStorage.setAccount(accountEntity);\n\n        // If scopes not returned in server response, use request scopes\n        const responseScopes = response.scopes ? ScopeSet.fromString(response.scopes) : ScopeSet.fromString(request.scopes);\n\n        const accountProperties = response.account.properties || {};\n        const uid = accountProperties[\"UID\"] || idTokenObj.claims.oid || idTokenObj.claims.sub || Constants.EMPTY_STRING;\n        const tid = accountProperties[\"TenantId\"] || idTokenObj.claims.tid || Constants.EMPTY_STRING;\n\n        // This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT is still received, SHR is calculated locally\n        let responseAccessToken;\n        let responseTokenType: AuthenticationScheme = AuthenticationScheme.BEARER;\n        switch (request.token_type) {\n            case AuthenticationScheme.POP: {\n                // Set the token type to POP in the response\n                responseTokenType = AuthenticationScheme.POP;\n\n                // Check if native layer returned an SHR token\n                if (response.shr) {\n                    this.logger.trace(\"handleNativeServerResponse: SHR is enabled in native layer\");\n                    responseAccessToken = response.shr;\n                    break;\n                }\n\n                // Generate SHR in msal js if WAM does not compute it when POP is enabled\n                const popTokenGenerator: PopTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n                const shrParameters: SignedHttpRequestParameters = {\n                    resourceRequestMethod: request.resourceRequestMethod,\n                    resourceRequestUri: request.resourceRequestUri,\n                    shrClaims: request.shrClaims,\n                    shrNonce: request.shrNonce\n                };\n                responseAccessToken = await popTokenGenerator.signPopToken(response.access_token, shrParameters);\n                break;\n\n            }\n            // assign the access token to the response for all non-POP cases (Should be Bearer only today)\n            default: {\n                responseAccessToken = response.access_token;\n            }\n        }\n\n        const result: AuthenticationResult = {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes.asArray(),\n            account: accountEntity.getAccountInfo(),\n            idToken: response.id_token,\n            idTokenClaims: idTokenObj.claims,\n            accessToken: responseAccessToken,\n            fromCache: false,\n            expiresOn: new Date(Number(reqTimestamp + response.expires_in) * 1000),\n            tokenType: responseTokenType,\n            correlationId: this.correlationId,\n            state: response.state,\n            fromNativeBroker: true\n        };\n\n        // Remove any existing cached tokens for this account\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\n            this.logger.error(`Error occurred while removing account context from browser storage. ${e}`);\n        });\n\n        return result;\n    }\n\n    /**\n     * Validates native platform response before processing\n     * @param response\n     */\n    private validateNativeResponse(response: object): NativeResponse {\n        if (\n            response.hasOwnProperty(\"access_token\") &&\n            response.hasOwnProperty(\"id_token\") &&\n            response.hasOwnProperty(\"client_info\") &&\n            response.hasOwnProperty(\"account\") &&\n            response.hasOwnProperty(\"scopes\") &&\n            response.hasOwnProperty(\"expires_in\")\n        ) {\n            return response as NativeResponse;\n        } else {\n            throw NativeAuthError.createUnexpectedError(\"Response missing expected properties.\");\n        }\n    }\n\n    /**\n     * Translates developer provided request object into NativeRequest object\n     * @param request\n     */\n    protected async initializeNativeRequest(request: PopupRequest|SsoSilentRequest): Promise<NativeTokenRequest> {\n        this.logger.trace(\"NativeInteractionClient - initializeNativeRequest called\");\n\n        const authority = request.authority || this.config.auth.authority;\n        const canonicalAuthority = new UrlString(authority);\n        canonicalAuthority.validateAsUri();\n\n        const scopes = request && request.scopes || [];\n        const scopeSet = new ScopeSet(scopes);\n        scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\n\n        if (request.prompt) {\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                    this.logger.trace(\"initializeNativeRequest: prompt is compatible with native flow\");\n                    break;\n                default:\n                    this.logger.trace(`initializeNativeRequest: prompt = ${request.prompt} is not compatible with native flow`);\n                    throw BrowserAuthError.createNativePromptParameterNotSupportedError();\n            }\n        }\n\n        const instanceAware: boolean = !!(request.extraQueryParameters && request.extraQueryParameters.instance_aware);\n\n        const validatedRequest: NativeTokenRequest = {\n            ...request,\n            accountId: this.accountId,\n            clientId: this.config.auth.clientId,\n            authority: canonicalAuthority.urlString,\n            scopes: scopeSet.printScopes(),\n            redirectUri: this.getRedirectUri(request.redirectUri),\n            correlationId: this.correlationId,\n            instance_aware: instanceAware,\n            token_type: request.authenticationScheme,\n            windowTitleSubstring: document.title,\n            extraParameters: {\n                ...request.extraQueryParameters,\n                ...request.tokenQueryParameters\n            },\n            extendedExpiryToken: false // Make this configurable?\n        };\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n\n            // add POP request type\n            const shrParameters: SignedHttpRequestParameters = {\n                resourceRequestUri: request.resourceRequestUri,\n                resourceRequestMethod: request.resourceRequestMethod,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce\n            };\n\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n            const cnf = await popTokenGenerator.generateCnf(shrParameters);\n\n            // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n            validatedRequest.req_cnf = await popTokenGenerator.generateCnfHash(cnf);\n        }\n\n        if (this.apiId === ApiId.ssoSilent || this.apiId === ApiId.acquireTokenSilent_silentFlow) {\n            validatedRequest.prompt = PromptValue.NONE;\n        }\n\n        return validatedRequest;\n    }\n}\n"],"names":[],"mappings":"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"}